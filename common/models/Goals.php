<?php

namespace common\models;

use Yii;

/**
 * This is the model class for table "goals".
 *
 * @property int $id
 * @property int $user_id
 * @property string $description
 * @property string $my_comment
 * @property string $measure_success
 * @property string $timeframe
 * @property string $support_needed
 * @property string $manager_comments
 * @property int $year
 * @property string $date
 * @property int $status
 */
class Goals extends \yii\db\ActiveRecord
{
    const STATUS_NEW = 1;
    const STATUS_SUBMIT_USER = 2;
    const STATUS_SUBMIT_MANAGER = 3;

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'goals';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['user_id', 'year', 'status'], 'integer'],
            [['description', 'my_comment', 'measure_success', 'timeframe', 'support_needed', 'manager_comments'], 'string'],
            [['date'], 'safe'],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'user_id' => 'User ID',
            'description' => 'Description',
            'my_comment' => 'My Comment',
            'measure_success' => 'Measure Success',
            'timeframe' => 'Timeframe',
            'support_needed' => 'Support Needed',
            'manager_comments' => 'Manager Comments',
            'year' => 'Year',
            'date' => 'Date',
            'status' => 'Status',
        ];
    }

    public function beforeSave($insert)
    {
        $this->user_id = $this->user_id ? $this->user_id : Yii::$app->user->getId();
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }


    public static function getGoalByIdUserId($goal_id, $user_id)
    {
        return (new \yii\db\Query())
            ->select(
                [
                    'goal.*',
                    'u.*',
                ])
            ->from(self::tableName() . ' goal')
            ->leftJoin(\backend\models\User::tableName() . ' u', 'u.id = goal.user_id')
            ->where(['goal.id' => $goal_id, 'user_id' => $user_id])
            ->one();
    }


    public static function GetAllByUserByYear($year)
    {
        return self::find()->where(
            [
                'user_id' => Yii::$app->user->getId(),
                'year' => Years::GetYearIdByYear($year),
            ])->all();
    }

    public static function GetAllByUserIdByYear($year, $id)
    {
        return self::find()->where(
            [
                'user_id' => $id,
                'year' => Years::GetYearIdByYear($year),
            ])->all();
    }
}
